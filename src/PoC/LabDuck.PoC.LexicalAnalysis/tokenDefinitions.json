[
  {
    "regex": "var",
    "Type": "ReservedWord"
  },
  {
    "regex": "if",
    "Type": "ReservedWord"
  },
  {
    "regex": "public",
    "Type": "ReservedWord"
  },
  {
    "regex": "class",
    "Type": "ReservedWord"
  },
  {
    "regex": "void",
    "Type": "ReservedWord"
  },
  {
    "regex": "return",
    "Type": "ReservedWord"
  },
  {
    "regex": "bool",
    "Type": "ReservedWord"
  },
  {
    "regex": "true",
    "Type": "ReservedWord"
  },
  {
    "regex": "false",
    "Type": "ReservedWord"
  },
  {
    "regex": "\\{",
    "Type": "Symbol"
  },
  {
    "regex": "\\}",
    "Type": "Symbol"
  },
  {
    "regex": ";",
    "Type": "Symbol"
  },
  {
    "regex": "\\(",
    "Type": "Symbol"
  },
  {
    "regex": "\\)",
    "Type": "Symbol"
  },
  {
    "regex": "\\+",
    "Type": "Operator"
  },
  {
    "regex": "\\+=",
    "Type": "Operator"
  },
  {
    "regex": "==",
    "Type": "Operator"
  },
  {
    "regex": "=",
    "Type": "Operator"
  },
  {
    "regex": "\"[^\"]*\"",
    "Type": "Chain"
  },
  {
    "regex": "[a-zA-Z][a-zA-Z0-9_]*",
    "Type": "Id"
  },
  {
    "regex": "[0-9]+",
    "Type": "Integer"
  }
]